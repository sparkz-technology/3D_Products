import { useGLTF } from '@react-three/drei'
import { shirt_baked_scene } from '../assets/models'
import { useFrame } from '@react-three/fiber'
import { useSnapshot } from 'valtio'
import state from '../store'
import { easing } from 'maath'

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
const ShirtBaked: React.FC = (props) => {
  const snap = useSnapshot(state)
  const { nodes, materials } = useGLTF(shirt_baked_scene)
  const lambertMaterial = materials.lambert1 as THREE.MeshLambertMaterial

  useFrame((_, delta) => {
    const isVisible = snap.currentModel === 'shirt_baked'

    easing.dampC(lambertMaterial.color, snap.color, 0.25, delta)
    //  animation when the visibility changes
    if (!isVisible) {
      // Move the model to the right (adjust the value as needed)
      nodes.T_Shirt_male.position.x += 0.1

      // Set visibility to false
      nodes.T_Shirt_male.visible = false
    } else {
      // Set visibility to true when the model is visible
      nodes.T_Shirt_male.visible = true
    }
  })

  return (
    <group
      {...props}
      dispose={null}
      visible={snap.currentModel === 'shirt_baked'}
    >
      <mesh
        castShadow
        receiveShadow
        material={materials.lambert1}
        geometry={(nodes.T_Shirt_male as THREE.Mesh).geometry}
        material-roughness={1}
      />
    </group>
  )
}
useGLTF.preload(shirt_baked_scene)
export default ShirtBaked
